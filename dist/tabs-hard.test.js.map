{"version":3,"sources":["tabs-hard.test.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tabs-hard.test.js","sourceRoot":"../test","sourcesContent":["// //手写节流\n// const d = function (a){\n//     a = a || '123'\n//     console.log(a)\n// }\n//\n// function fd (f, time){\n//     let timeOut = null\n//     return function (...args){\n//         if(timeOut){return}\n//         f(...args);\n//         timeOut = setTimeout( _ => {\n//             timeOut = null\n//         },time)\n//     }\n// }\n//\n// let d2 = fd(d,10 * 1000);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// //手写防抖\n// const fn = () => {\n//     console.log('success')\n// }\n//\n// const cFn = (f,time) => {\n//     let timeOut = null\n//     return (...args) => {\n//         if(timeOut){\n//             clearTimeout(timeOut)\n//         }\n//         timeOut = setTimeout(_ => {\n//             f(...args);\n//             timeOut = null\n//         },time)\n//     }\n// }\n//\n// let d3 = cFn(fn,3000)\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// //手写AJAX\n// let xhr = new XMLHttpRequest();\n//\n// xhr.open('GET','/xxx')\n// xhr.onreadystatechange = function () {\n//     if(xhr.readyState === 4){\n//         if(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304){\n//             // success(xhr)\n//         }else{\n//             // fail(xhr)\n//         }\n//     }\n// }\n// xhr.send('{\"name\":\"123\"}')\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// //手写简易promise\n// class Promise3 {\n//     #status = 'pending'\n//     constructor(fn) {\n//         this.resolve_arr = []\n//         this.reject_arr = []\n//\n//         const resolve = (data) => {\n//             this.#status = 'fulfilled'\n//             const fn = this.resolve_arr.shift()\n//             if(!fn) return\n//             const x = fn.call(undefined,data)\n//             resolve(x)\n//         }\n//         const reject = (data) => {\n//             this.#status = 'rejected'\n//             const fn = this.reject_arr.shift()\n//             if(!fn) return\n//             const x = fn.call(undefined, data)\n//             reject(x)\n//         }\n//\n//         fn.call(undefined,resolve,reject)\n//     }\n//     then(fn1,fn2){\n//         this.resolve_arr.push(fn1)\n//         this.reject_arr.push(fn2)\n//     }\n// }\n//\n// const pms = new Promise3(function (resolve,reject){\n//     setTimeout(_ => {\n//         reject('123')\n//     },3000)\n// })\n//\n// pms.then((data)=>{console.log(data)}, (data)=>{console.error(data)})\n\n\n// const pms2 = new Promise(function (resolve,reject){\n//     reject('123')\n// })\n// pms2.then((data)=>{console.log(data)}, (data)=>{console.error(data)})\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//手写promise.arr\n// Promise.myall = (list) => {\n//     let num = 0;\n//     let result = []\n//     return new Promise((resolve,reject)=> {\n//         list.forEach((item,index) => {\n//             item.then((res) => {\n//                 num += 1\n//                 result[index] = res\n//                 if(num === list.length){\n//                     resolve(result)\n//                 }\n//             }).catch((err) => {\n//                 reject(err)\n//             })\n//         })\n//     });\n// }\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//手写深拷贝1\n// const b = JSON.parse(JSON.stringify(a));\n//\n// //手写深拷贝2\n// const cache = new Map();\n// const deepClone = (a) => {\n//     if(a instanceof Object) { // 不考虑跨 iframe\n//         if(cache.get(a)) { return cache.get(a) }\n//         let result\n//         if(a instanceof Function) {\n//             if(a.prototype) { // 有 prototype 就是普通函数\n//                 result = function(...args){ return a.call(this, ...args) }\n//             } else {  // 没有 prototype 就是箭头函数函数\n//                 result = (...args) => { return a.call(undefined, ...args) }\n//             }\n//         } else if(a instanceof Array) {\n//             result = []\n//         } else if(a instanceof Date) {\n//             result = new Date(a - 0)\n//         } else if(a instanceof RegExp) {\n//             result = new RegExp(a.source, a.flags)\n//         } else {\n//             result = {}\n//         }\n//         cache.set(a, result)\n//         for(let key in a) {\n//             if(a.hasOwnProperty(key)){  //不克隆原型\n//                 result[key] = deepClone(a[key])\n//             }\n//         }\n//         return result\n//     } else {\n//         return a\n//     }\n// }\n//\n// ////测试代码/////\n// const a = {\n//     number:1, bool:false, str: 'hi', empty1: undefined, empty2: null,\n//     array: [\n//         {name: 'frank', age: 18},\n//         {name: 'jacky', age: 19}\n//     ],\n//     date: new Date(2000,0,1,20,30,0),\n//     regex: /\\.(j|t)sx/i,\n//     obj: { name:'frank', age: 18},\n//     f1: (a, b) => a + b,\n//     f2: function(a, b) { return a + b }\n// }\n// a.self = a\n// const b = deepClone(a)\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// //手写数组去重1\n// let a = [1,2,2,3,3,3]\n// const b = Array.from(new Set(a))\n//\n// //手写数组去重2\n// const uniq = (arr) => {\n//     let result = []\n//     arr.forEach((item) => {\n//         let flag = false\n//         for(let i = 0;i<result.length;i++){\n//             let i_item = result[i]\n//             if(item === i_item){\n//                 flag = true\n//                 break\n//             }\n//         }\n//         if(result.length === 0 || !flag){\n//             result.push(item)\n//         }\n//     })\n//     return result\n// }\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//手写拖拽\n// var flag = false\n// var position = []\n// var div = document.getElementById('div')\n// div.addEventListener('mousedown',function(event){\n//     flag = true\n//     position = [event.clientX,event.clientY]\n// })\n// document.addEventListener('mousemove',function(event){\n//     if(flag){\n//         let left = event.clientX - position[0]\n//         let top = event.clientY - position[1]\n//         div.style.left = parseInt(div.style.left || 0) + left + 'px'\n//         div.style.top = parseInt(div.style.top || 0) + top + 'px'\n//         position = [event.clientX,event.clientY]\n//     }\n// })\n// document.addEventListener('mouseup',function(event){\n//     flag = false\n// })"]}